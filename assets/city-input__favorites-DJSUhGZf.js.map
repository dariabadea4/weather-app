{"version":3,"file":"city-input__favorites-DJSUhGZf.js","sources":["../../src/scripts/city-input__functions.js","../../src/scripts/city-input.js","../../src/scripts/city-input__favorites.js"],"sourcesContent":["const favorites = document.querySelector('.viewed-city__favorites-container'),\n  nextBtn = document.querySelector('.viewed-city__next'),\n  prevBtn = document.querySelector('.viewed-city__prev');\n\nlet itemsOnPage,\n    currentPage = 0,\n    longitude,\n    latitude;\n\n// store cities in local storage\nconst setCity = (key, value) => {\n  try {\n    const oras = JSON.stringify(value);\n    localStorage.setItem(key, oras);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n//   retrieve cities from local storage\nconst getCity = key => {\n  try {\n    const data = localStorage.getItem(key);\n    return data === null ? undefined : JSON.parse(data);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// check how many cities are in favorites\nconst checkLength = (arr, number)=>{\n  switch (true) {\n    case (arr.length > 4):\n      nextBtn.classList.remove('hidden')\n      break;\n    default:\n      nextBtn.classList.add('hidden')\n      break;\n  }\n  switch (true) {\n    case (number > 0):\n      prevBtn.classList.remove('hidden')\n      break;\n  \n    default:\n      prevBtn.classList.add('hidden')\n      break;\n  }\n}\n\n// not actually getting the location\n\nconst getLocation=()=>{\n  setTimeout(Notify.failure('Location not found,try again later'),2000)\n}\n\n\n// check the size of the page\nconst checkPageSize=(number)=>{\n  switch (true) {\n    case (number < 500 && number > 400):\n      itemsOnPage = 3;\n      break;\n    case (number < 400):\n      itemsOnPage = 2;\n      break;\n    default:\n      itemsOnPage = 4;\n      break;\n  }\n}\n\n// create city object\nconst newCity = (cityName) => ({ \n  cityName :cityName, \n  id: Math.floor((Math.random()*200)+1)\n});\n\nconst saveCity = value => {\n  const cityObj = newCity(value)\n  const currentState = getCity('orase');\n  if (currentState === undefined) {\n    setCity('orase', [cityObj]);\n  } else {\n    const cityObj = newCity(value)\n    currentState.push(cityObj);\n    setCity('orase', currentState);\n  }\n};\n\n// truncate displayed city\nconst shortWord = (str, maxLength) => {\n  if(!str){\n    return\n  }\n  if (str.length > maxLength) {\n    return str.substring(0, maxLength) + '...';\n  }\n  return str;\n};\n\n// populate favorites list\n\nconst populateFavorites = () => {\n  const cities = getCity('orase');\n  if (cities === undefined) {\n    return;\n  } else {\n    checkPageSize(window.innerWidth)\n    checkLength(cities, currentPage)\n    favorites.innerHTML = '';\n    const begin = currentPage * itemsOnPage,\n          end = begin + itemsOnPage,\n          pageItems = cities.slice(begin, end);\n\n    pageItems.forEach(item => {\n      const shortCity = shortWord(item.cityName, 6);\n      const favorite = `<button class=\"viewed-city\" type=\"button\" value=\"${item.cityName}\"data-id=\"${item.id}\">\n                                  ${shortCity}\n                                  <svg class=\"viewed-city__close-btn\" data-id=\"${item.id}\">\n                                      <use href =\"./city-input-icons.svg#icon-close\"></use>\n                                  </svg>\n                              </button>`;\n      favorites.insertAdjacentHTML('beforeend', favorite);\n    });\n  }\n};\n\nconst nextPage = pageNumber => {\n  const cities = getCity('orase');\n  if ((pageNumber + 1) * itemsOnPage < cities.length) {\n    currentPage++;\n    populateFavorites();\n  }\n};\n\nconst prevPage = pageNumber => {\n  if (pageNumber >= 1) {\n    currentPage--;\n    populateFavorites();\n    console.log(currentPage);\n  }\n};\n\nexport {\n  setCity,\n  getCity,\n  saveCity,\n  populateFavorites,\n  nextPage,\n  prevPage,\n  getLocation,\n  currentPage,\n};\n\n","import { saveCity, populateFavorites } from \"./city-input__functions\";\n\nconst input = document.querySelector('.city-input__field'),\n      favorites= document.querySelector('.star-icon'),\n      favContainer = document.querySelector('.viewed-city__favorites-container');\nlet inputData;\n    \n\n\n// search\ninput.addEventListener('change', e => {\n  inputData = e.target.value;\n});\n\n// search saved city\nfavContainer.addEventListener('click', e => {\n  inputData = e.target.value\n})\n\n// save to favorites\nfavorites.addEventListener('click', () => {\n  saveCity(inputData);\n  populateFavorites();\n});\n\nexport {inputData};","\nimport {\n  populateFavorites,\n  nextPage,\n  prevPage,\n  currentPage,\n  getCity,\n  getLocation,\n  setCity,\n} from './city-input__functions';\n\nconst nextBtn = document.querySelector('.viewed-city__next'),\n  prevBtn = document.querySelector('.viewed-city__prev'),\n  favContainer = document.querySelector('.viewed-city__favorites-container');\n\nwindow.addEventListener('resize', () => {\n  populateFavorites();\n});\n\nnextBtn.addEventListener('click', () => {\n  nextPage(currentPage);\n});\n\nprevBtn.addEventListener('click', () => {\n  prevPage(currentPage);\n});\n\n// Remove from favorites\nfavContainer.addEventListener('click', e => {\n  const selectedCity = e.target.parentNode.dataset.id,\n    cities = getCity('orase');\n  if (e.target.nodeName !== 'use' && e.target.nodeName !== 'svg') {\n    return;\n  }\n  const newList = cities.filter(city => city.id != selectedCity);\n  setCity('orase', newList);\n  populateFavorites();\n});\n\ndocument.querySelector('.location-icon').addEventListener('click', () => {\n  const answer = confirm('Would you like the browser to access your location?')\n  answer ? getLocation() : alert('Please select a city');\n});\n\npopulateFavorites();\n"],"names":["favorites","nextBtn","prevBtn","itemsOnPage","currentPage","setCity","key","value","oras","err","getCity","data","error","checkLength","arr","number","getLocation","checkPageSize","newCity","cityName","saveCity","cityObj","currentState","shortWord","str","maxLength","populateFavorites","cities","begin","end","item","shortCity","favorite","nextPage","pageNumber","prevPage","input","favContainer","inputData","selectedCity","newList","city"],"mappings":"ssBAAA,MAAMA,EAAY,SAAS,cAAc,mCAAmC,EAC1EC,EAAU,SAAS,cAAc,oBAAoB,EACrDC,EAAU,SAAS,cAAc,oBAAoB,EAEpD,IAACC,EACAC,EAAc,EAKlB,MAAMC,EAAU,CAACC,EAAKC,IAAU,CAC9B,GAAI,CACF,MAAMC,EAAO,KAAK,UAAUD,CAAK,EACjC,aAAa,QAAQD,EAAKE,CAAI,CAC/B,OAAQC,EAAK,CACZ,QAAQ,IAAIA,CAAG,CAChB,CACH,EAGMC,EAAUJ,GAAO,CACrB,GAAI,CACF,MAAMK,EAAO,aAAa,QAAQL,CAAG,EACrC,OAAOK,IAAS,KAAO,OAAY,KAAK,MAAMA,CAAI,CACnD,OAAQC,EAAO,CACd,QAAQ,IAAIA,CAAK,CAClB,CACH,EAGMC,EAAc,CAACC,EAAKC,IAAS,CACjC,OAAQ,GAAI,CACV,KAAMD,EAAI,OAAS,EACjBb,EAAQ,UAAU,OAAO,QAAQ,EACjC,MACF,QACEA,EAAQ,UAAU,IAAI,QAAQ,EAC9B,KACH,CACD,OAAQ,GAAI,CACV,KAAMc,EAAS,EACbb,EAAQ,UAAU,OAAO,QAAQ,EACjC,MAEF,QACEA,EAAQ,UAAU,IAAI,QAAQ,EAC9B,KACH,CACH,EAIMc,EAAY,IAAI,CACpB,WAAW,OAAO,QAAQ,oCAAoC,EAAE,GAAI,CACtE,EAIMC,EAAeF,GAAS,CAC5B,OAAQ,GAAI,CACV,KAAMA,EAAS,KAAOA,EAAS,KAC7BZ,EAAc,EACd,MACF,KAAMY,EAAS,IACbZ,EAAc,EACd,MACF,QACEA,EAAc,EACd,KACH,CACH,EAGMe,EAAWC,IAAc,CAC7B,SAAUA,EACV,GAAI,KAAK,MAAO,KAAK,OAAQ,EAAC,IAAK,CAAC,CACtC,GAEMC,EAAWb,GAAS,CACxB,MAAMc,EAAUH,EAAQX,CAAK,EACvBe,EAAeZ,EAAQ,OAAO,EACpC,GAAIY,IAAiB,OACnBjB,EAAQ,QAAS,CAACgB,CAAO,CAAC,MACrB,CACL,MAAMA,EAAUH,EAAQX,CAAK,EAC7Be,EAAa,KAAKD,CAAO,EACzBhB,EAAQ,QAASiB,CAAY,CAC9B,CACH,EAGMC,EAAY,CAACC,EAAKC,IAAc,CACpC,GAAID,EAGJ,OAAIA,EAAI,OAASC,EACRD,EAAI,UAAU,EAAGC,CAAS,EAAI,MAEhCD,CACT,EAIME,EAAoB,IAAM,CAC9B,MAAMC,EAASjB,EAAQ,OAAO,EAC9B,GAAIiB,IAAW,OAER,CACLV,EAAc,OAAO,UAAU,EAC/BJ,EAAYc,EAAQvB,CAAW,EAC/BJ,EAAU,UAAY,GACtB,MAAM4B,EAAQxB,EAAcD,EACtB0B,EAAMD,EAAQzB,EACFwB,EAAO,MAAMC,EAAOC,CAAG,EAE/B,QAAQC,GAAQ,CACxB,MAAMC,EAAYR,EAAUO,EAAK,SAAU,CAAC,EACtCE,EAAW,oDAAoDF,EAAK,QAAQ,aAAaA,EAAK,EAAE;AAAA,oCACxEC,CAAS;AAAA,iFACoCD,EAAK,EAAE;AAAA;AAAA;AAAA,yCAIlF9B,EAAU,mBAAmB,YAAagC,CAAQ,CACxD,CAAK,CACF,CACH,EAEMC,EAAWC,GAAc,CAC7B,MAAMP,EAASjB,EAAQ,OAAO,GACzBwB,EAAa,GAAK/B,EAAcwB,EAAO,SAC1CvB,IACAsB,IAEJ,EAEMS,EAAWD,GAAc,CACzBA,GAAc,IAChB9B,IACAsB,IACA,QAAQ,IAAItB,CAAW,EAE3B,EC5IMgC,EAAQ,SAAS,cAAc,oBAAoB,EACnDpC,EAAW,SAAS,cAAc,YAAY,EAC9CqC,EAAe,SAAS,cAAc,mCAAmC,EAC5E,IAACC,EAKJF,EAAM,iBAAiB,SAAU,GAAK,CACpCE,EAAY,EAAE,OAAO,KACvB,CAAC,EAGDD,EAAa,iBAAiB,QAAS,GAAK,CAC1CC,EAAY,EAAE,OAAO,KACvB,CAAC,EAGDtC,EAAU,iBAAiB,QAAS,IAAM,CACxCoB,EAASkB,CAAS,EAClBZ,GACF,CAAC,ECZD,MAAMzB,EAAU,SAAS,cAAc,oBAAoB,EACzDC,EAAU,SAAS,cAAc,oBAAoB,EACrDmC,EAAe,SAAS,cAAc,mCAAmC,EAE3E,OAAO,iBAAiB,SAAU,IAAM,CACtCX,GACF,CAAC,EAEDzB,EAAQ,iBAAiB,QAAS,IAAM,CACtCgC,EAAS7B,CAAW,CACtB,CAAC,EAEDF,EAAQ,iBAAiB,QAAS,IAAM,CACtCiC,EAAS/B,CAAW,CACtB,CAAC,EAGDiC,EAAa,iBAAiB,QAAS,GAAK,CAC1C,MAAME,EAAe,EAAE,OAAO,WAAW,QAAQ,GAC/CZ,EAASjB,EAAQ,OAAO,EAC1B,GAAI,EAAE,OAAO,WAAa,OAAS,EAAE,OAAO,WAAa,MACvD,OAEF,MAAM8B,EAAUb,EAAO,OAAOc,GAAQA,EAAK,IAAMF,CAAY,EAC7DlC,EAAQ,QAASmC,CAAO,EACxBd,GACF,CAAC,EAED,SAAS,cAAc,gBAAgB,EAAE,iBAAiB,QAAS,IAAM,CACxD,QAAQ,qDAAqD,EACnEV,EAAW,EAAK,MAAM,sBAAsB,CACvD,CAAC,EAEDU,EAAmB"}