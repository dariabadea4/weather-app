{"version":3,"file":"index.js","sources":["../js/chart.js","../src/scripts/city-input.js","../src/main.js"],"sourcesContent":["import Chart from 'chart.js/auto';\n\nlet weatherChart;\n\n// Function to update the chart with new data\nexport function updateChart(data, labels) {\n  const ctx = document.querySelector('.weatherChart').getContext('2d');\n\n  // Destroy the previous chart if it exists\n  if (weatherChart) {\n    weatherChart.destroy();\n  }\n\n  // Create the new chart with updated data\n  weatherChart = new Chart(ctx, {\n    type: 'line',\n    data: {\n      labels: labels, // New labels (dates or times)\n      datasets: [\n        {\n          label: 'Temperature, CÂ°',\n          data: data.temps,\n          borderColor: 'rgba(255, 107, 9, 1)',\n          backgroundColor: 'rgba(255, 107, 9, 1)',\n          borderWidth: 2\n\n          \n        },\n        {\n          label: 'Humidity, %',\n          data: data.humidity,\n          borderColor: 'rgba(9, 6, 235, 1)',\n          backgroundColor: 'rgba(9, 6, 235, 1)',\n          borderWidth: 2\n          \n        },\n        {\n          label: 'Wind Speed, m/s',\n          data: data.windSpeed,\n          borderColor: 'rgba(234, 154, 5, 1)',\n          backgroundColor: 'rgba(234, 154, 5, 1)',\n          borderWidth: 2\n          \n        },\n        {\n          label: 'Atmospheric Pressure, m/m',\n          data: data.pressure,\n          borderColor: 'rgba(6, 120, 6, 1)',\n          backgroundColor: 'rgba(6, 120, 6, 1)',\n          borderWidth: 2\n          \n        }\n      ]\n    },\n    options: {\n      responsive: true,\n      scales: {\n        y: {\n          beginAtZero: true\n        }\n      },\n      plugins: {\n        legend: {\n          display: true,\n          position: 'top',\n          labels: {\n            boxWidth: 15,\n            boxHeight: 12,\n            usePointStyle: false\n          },\n          onClick: (e, legendItem) => {\n            const index = legendItem.datasetIndex;\n            const dataset = weatherChart.data.datasets[index];\n            dataset.hidden = !dataset.hidden;\n            weatherChart.update();\n          }\n        }\n      }\n    }\n  });\n}","let inputData;\n\nconst setCity = (key, value) => {\n  try {\n    const oras = JSON.stringify(value);\n    localStorage.setItem(key, oras);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst getCity = key => {\n  try {\n    const data = localStorage.getItem(key);\n    return data === null ? undefined : JSON.parse(data);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst saveCity = value => {\n  const currentState = getCity('orase');\n  if (currentState === undefined) {\n    setCity('orase', [value]);\n  } else {\n    currentState.push(value);\n    setCity('orase', currentState);\n  }\n};\n\ndocument.querySelector('.city-input__field').addEventListener('change', e => {\n  inputData = e.target.value;\n});\n\ndocument.querySelector('.star').addEventListener('click', () => {\n  saveCity(inputData);\n});\n","\nimport { updateChart } from '../js/chart'; // Import the function from chart.js\n\n// Example data\nconst mockData = {\n  Kyiv: { temps: [-2, 1, -1, 2],humidity: [60, 55, 58, 62],windSpeed: [2, 3, 1, 4],pressure: [1008, 1200, 1119, 1007], labels: [\"Feb 9\", \"Feb 10\", \"Feb 11\", \"Feb 12\"] },\n  Paris: { temps: [5, 6, 4, 7], labels: [\"Feb 9\", \"Feb 10\", \"Feb 11\", \"Feb 12\"] }\n};\n\n// Event listener for city selection change\ndocument.getElementById('citySelect').addEventListener('change', function () {\n  const selectedCity = this.value;\n  const weatherData = mockData[selectedCity];\n  updateChart(weatherData, weatherData.labels);\n});\n\n// Toggle button logic\ndocument.querySelector('.toggleChartBtn').addEventListener('click', function () {\n  const chartContainer = document.querySelector('.chart-container');\n\n  if (chartContainer.style.display === 'none' || chartContainer.style.display === '') {\n    chartContainer.style.display = 'block';\n    this.textContent = 'Hide Chart';\n\n    const selectedCity = document.getElementById('citySelect').value;\n    const weatherData = mockData[selectedCity];\n    updateChart(weatherData, weatherData.labels);\n  } else {\n    chartContainer.style.display = 'none';\n    this.textContent = 'Show Chart';\n  }\n});\n\n// Initially hide the chart\ndocument.addEventListener('DOMContentLoaded', () => {\n  document.querySelector('.chart-container').style.display = 'none';\n});\n\nimport './scripts/city-input'"],"names":["weatherChart","updateChart","data","labels","ctx","Chart","e","legendItem","index","dataset","inputData","setCity","key","value","oras","err","getCity","error","saveCity","currentState","mockData","selectedCity","weatherData","chartContainer"],"mappings":"svBAEA,IAAIA,EAGG,SAASC,EAAYC,EAAMC,EAAQ,CACxC,MAAMC,EAAM,SAAS,cAAc,eAAe,EAAE,WAAW,IAAI,EAG/DJ,GACFA,EAAa,QAAO,EAItBA,EAAe,IAAIK,EAAMD,EAAK,CAC5B,KAAM,OACN,KAAM,CACJ,OAAQD,EACR,SAAU,CACR,CACE,MAAO,kBACP,KAAMD,EAAK,MACX,YAAa,uBACb,gBAAiB,uBACjB,YAAa,CAGd,EACD,CACE,MAAO,cACP,KAAMA,EAAK,SACX,YAAa,qBACb,gBAAiB,qBACjB,YAAa,CAEd,EACD,CACE,MAAO,kBACP,KAAMA,EAAK,UACX,YAAa,uBACb,gBAAiB,uBACjB,YAAa,CAEd,EACD,CACE,MAAO,4BACP,KAAMA,EAAK,SACX,YAAa,qBACb,gBAAiB,qBACjB,YAAa,CAEd,CACF,CACF,EACD,QAAS,CACP,WAAY,GACZ,OAAQ,CACN,EAAG,CACD,YAAa,EACd,CACF,EACD,QAAS,CACP,OAAQ,CACN,QAAS,GACT,SAAU,MACV,OAAQ,CACN,SAAU,GACV,UAAW,GACX,cAAe,EAChB,EACD,QAAS,CAACI,EAAGC,IAAe,CAC1B,MAAMC,EAAQD,EAAW,aACnBE,EAAUT,EAAa,KAAK,SAASQ,CAAK,EAChDC,EAAQ,OAAS,CAACA,EAAQ,OAC1BT,EAAa,OAAM,CACpB,CACF,CACF,CACF,CACL,CAAG,CACH,CChFA,IAAIU,EAEJ,MAAMC,EAAU,CAACC,EAAKC,IAAU,CAC9B,GAAI,CACF,MAAMC,EAAO,KAAK,UAAUD,CAAK,EACjC,aAAa,QAAQD,EAAKE,CAAI,CAC/B,OAAQC,EAAK,CACZ,QAAQ,IAAIA,CAAG,CAChB,CACH,EAEMC,EAAUJ,GAAO,CACrB,GAAI,CACF,MAAMV,EAAO,aAAa,QAAQU,CAAG,EACrC,OAAOV,IAAS,KAAO,OAAY,KAAK,MAAMA,CAAI,CACnD,OAAQe,EAAO,CACd,QAAQ,IAAIA,CAAK,CAClB,CACH,EAEMC,EAAWL,GAAS,CACxB,MAAMM,EAAeH,EAAQ,OAAO,EAChCG,IAAiB,OACnBR,EAAQ,QAAS,CAACE,CAAK,CAAC,GAExBM,EAAa,KAAKN,CAAK,EACvBF,EAAQ,QAASQ,CAAY,EAEjC,EAEA,SAAS,cAAc,oBAAoB,EAAE,iBAAiB,SAAU,GAAK,CAC3ET,EAAY,EAAE,OAAO,KACvB,CAAC,EAED,SAAS,cAAc,OAAO,EAAE,iBAAiB,QAAS,IAAM,CAC9DQ,EAASR,CAAS,CACpB,CAAC,EChCD,MAAMU,EAAW,CACf,KAAM,CAAE,MAAO,CAAC,GAAI,EAAG,GAAI,CAAC,EAAE,SAAU,CAAC,GAAI,GAAI,GAAI,EAAE,EAAE,UAAW,CAAC,EAAG,EAAG,EAAG,CAAC,EAAE,SAAU,CAAC,KAAM,KAAM,KAAM,IAAI,EAAG,OAAQ,CAAC,QAAS,SAAU,SAAU,QAAQ,CAAG,EACtK,MAAO,CAAE,MAAO,CAAC,EAAG,EAAG,EAAG,CAAC,EAAG,OAAQ,CAAC,QAAS,SAAU,SAAU,QAAQ,CAAG,CACjF,EAGA,SAAS,eAAe,YAAY,EAAE,iBAAiB,SAAU,UAAY,CAC3E,MAAMC,EAAe,KAAK,MACpBC,EAAcF,EAASC,CAAY,EACzCpB,EAAYqB,EAAaA,EAAY,MAAM,CAC7C,CAAC,EAGD,SAAS,cAAc,iBAAiB,EAAE,iBAAiB,QAAS,UAAY,CAC9E,MAAMC,EAAiB,SAAS,cAAc,kBAAkB,EAEhE,GAAIA,EAAe,MAAM,UAAY,QAAUA,EAAe,MAAM,UAAY,GAAI,CAClFA,EAAe,MAAM,QAAU,QAC/B,KAAK,YAAc,aAEnB,MAAMF,EAAe,SAAS,eAAe,YAAY,EAAE,MACrDC,EAAcF,EAASC,CAAY,EACzCpB,EAAYqB,EAAaA,EAAY,MAAM,CAC/C,MACIC,EAAe,MAAM,QAAU,OAC/B,KAAK,YAAc,YAEvB,CAAC,EAGD,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,SAAS,cAAc,kBAAkB,EAAE,MAAM,QAAU,MAC7D,CAAC"}