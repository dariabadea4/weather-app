{"version":3,"file":"index.js","sources":["../src/scripts/current-date.js","../src/scripts/quote.js","../src/scripts/widget.js","../src/main.js"],"sourcesContent":["fetch('https://worldtimeapi.org/api/ip')\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        })\n        .then(data => {\n          const dateTime = data.datetime;\n          const currentDate = new Date(dateTime);\n\n          const day = currentDate.getDate();\n          const weekday = currentDate.toLocaleString('en-US', { weekday: 'short' });\n          const month = currentDate.toLocaleString('en-US', { month: 'long' });\n\n          const hours = String(currentDate.getHours()).padStart(2, '0');\n          const minutes = String(currentDate.getMinutes()).padStart(2, '0');\n          const seconds = String(currentDate.getSeconds()).padStart(2, '0');\n          const time = `${hours}:${minutes}:${seconds}`;\n\n          document.querySelector('.day').textContent = day;\n          document.querySelector('.weekday').textContent = weekday;\n          document.querySelector('.month').textContent = month;\n          document.querySelector('.time').textContent = time;\n\n          const lat = data.latitude;\n          const lon = data.longitude;\n\n          return fetch(`https://api.sunrise-sunset.org/json?lat=${lat}&lng=${lon}&formatted=0`);\n        })\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Sunrise-Sunset API response was not ok');\n          }\n          return response.json();\n        })\n        .then(sunData => {\n\n          const sunrise = new Date(sunData.results.sunrise).toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit', hour12: false });\n          const sunset = new Date(sunData.results.sunset).toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit', hour12: false });\n\n          document.querySelector('.sunrise').textContent = ` ${sunrise}`;\n          document.querySelector('.sunset').textContent = ` ${sunset}`;\n        })\n        .catch(error => {\n          console.error('Error:', error);\n          document.querySelector('.day').textContent = 'Error';\n          document.querySelector('.weekday').textContent = 'Error';\n          document.querySelector('.month').textContent = 'Error';\n          document.querySelector('.time').textContent = 'Error';\n          document.querySelector('.sunrise').textContent = 'Error';\n          document.querySelector('.sunset').textContent = 'Error';\n        });\n","const quotes = [\n  {\n    text: \"The only limit to our realization of tomorrow is our doubts of today.\",\n    author: \"Franklin D. Roosevelt\",\n  },\n  {\n    text: \"Success is not final, failure is not fatal: It is the courage to continue that counts.\",\n    author: \"Winston Churchill\",\n  },\n  {\n    text: \"You miss 100% of the shots you don't take.\",\n    author: \"Wayne Gretzky\",\n  },\n  {\n    text: \"The best time to plant a tree was 20 years ago. The second best time is now.\",\n    author: \"Chinese Proverb\",\n  },\n  {\n    text: \"It always seems impossible until it's done.\",\n    author: \"Nelson Mandela\",\n  },\n  {\n    text: \"Don't watch the clock; do what it does. Keep going.\",\n    author: \"Sam Levenson\",\n  },\n  {\n    text: \"Whether you think you can or you think you can't, you're right.\",\n    author: \"Henry Ford\",\n  },\n];\n\nconst currentDay = new Date().getDay();\n\nconst currentQuote = quotes[currentDay];\n\ndocument.getElementById(\"quote-text\").textContent = currentQuote.text;\ndocument.getElementById(\"quote-author\").textContent = currentQuote.author;","import { inputData } from './city-input';\ndocument.addEventListener('DOMContentLoaded', () => {\n  const apiKey = '20ffa3f3195f1b01715c348123da79a3';\n  const cityInputElement = document.querySelector('#city-input');\n  const locationElement = document.getElementById('current-location');\n  const tempElement = document.getElementById('current-temp');\n  const minTempElement = document.getElementById('min-temp');\n  const maxTempElement = document.getElementById('max-temp');\n  const weatherContainer = document.querySelector('.weather-info');\n  const getWeather = async location => {\n    if (!location) {\n      alert('Te rog, introdu un nume de oraș.');\n      return;\n    }\n    const url = `https://api.openweathermap.org/data/2.5/forecast?q=${location}&units=metric&appid=${apiKey}`;\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error('Orașul nu a fost găsit.');\n      }\n      const data = await response.json();\n      displayCurrentWeather(data);\n\n    } catch (error) {}\n  };\n  const displayCurrentWeather = data => {\n    const today = new Date().toISOString().split('T')[0];\n    const dayData = data.list.find(item => item.dt_txt.startsWith(today));\n    const {\n      city: { country, name },\n      list: [city, weather],\n    } = data;\n    const {\n      main: { temp, temp_max, temp_min },\n    } = city;\n    const icon = data.list[0].weather[0].icon\n\n    weatherContainer.innerHTML = ' ';\n\n    const weatherInfo = `<div class=\"current-weather\">\n                          <img class=\"about-icon\" src=\"http://openweathermap.org/img/wn/${icon}.png\"/>\n                          <span class=\"location\">${name}, ${country}</span>\n                          <div class=\"temp-values\">\n                            <div class=\"current-temp\">${Math.round(temp)}</div>\n                            <div class=\"min-max__temp\">\n                              <div class=\"min-max__temps\">\n                                <div class=\"min-temp\">min</div>\n                                <div class=\"temps\"> ${Math.round(temp_min)}°</div>\n                              </div>\n                              <div class=\"line\"></div>\n                              <div class=\"min-max__temps\">\n                                <div class=\"max-temp\">max</div>\n                                <div class=\"temps\"> ${Math.round(temp_max)}°</div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>`;\n    weatherContainer.insertAdjacentHTML('afterbegin', weatherInfo);\n    locationElement.textContent = `${data.city.name}, ${data.city.country}`;\n    tempElement.textContent = `${Math.round(dayData.main.temp)}°C`;\n    minTempElement.textContent = `${Math.round(dayData.main.temp_min)}°C`;\n    maxTempElement.textContent = `${Math.round(dayData.main.temp_max)}°C`;\n\n\n\n  };\n  cityInputElement.addEventListener('change', () => {\n    const location = cityInputElement.value.trim();\n    if (location) {\n      getWeather(location);\n    }\n  });\n  const initialLocation = inputData?.trim() || 'Kyiv';\n  getWeather(initialLocation);\n});","import './scripts/city-input.js'\nimport './scripts/city-input__favorites.js'\nimport './scripts/current-date';\nimport './scripts/quote.js'\nimport './scripts/widget.js'\n\nif (document.URL.includes('index')) {\n    document.querySelector('#today-btn').classList.add('selected')\n}"],"names":["response","data","dateTime","currentDate","day","weekday","month","hours","minutes","seconds","time","lat","lon","sunData","sunrise","sunset","error","quotes","currentDay","currentQuote","apiKey","cityInputElement","locationElement","tempElement","minTempElement","maxTempElement","weatherContainer","getWeather","location","url","displayCurrentWeather","today","dayData","item","country","name","city","weather","temp","temp_max","temp_min","icon","weatherInfo","initialLocation","_a","inputData"],"mappings":"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"}